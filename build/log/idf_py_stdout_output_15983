[1/10] Performing build step for 'bootloader'
[1/1] cd /project/build/bootloader/esp-idf/esptool_py && /opt/esp/python_env/idf5.4_py3.10_env/bin/python /opt/esp/idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /project/build/bootloader/bootloader.bin
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/8] cd /project/build/esp-idf/st7735s && /opt/esp/python_env/idf5.4_py3.10_env/bin/python /opt/esp/idf/components/spiffs/spiffsgen.py 0xf0000 /project/components/st7735s/font /project/build/storage.bin --page-size=256 --obj-name-len=32 --meta-len=4 --use-magic --use-magic-len
[3/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ESP_GAMING.c.obj
[4/8] Linking C static library esp-idf/main/libmain.a
[5/8] Generating ld/sections.ld
[6/8] Linking CXX executable ESP_GAMING.elf
[7/8] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32 image...
Merged 3 ELF sections
Successfully created esp32 image.
Generated /project/build/ESP_GAMING.bin
[8/8] cd /project/build/esp-idf/esptool_py && /opt/esp/python_env/idf5.4_py3.10_env/bin/python /opt/esp/idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /project/build/partition_table/partition-table.bin /project/build/ESP_GAMING.bin
ESP_GAMING.bin binary size 0x3adb0 bytes. Smallest app partition is 0x100000 bytes. 0xc5250 bytes (77%) free.
